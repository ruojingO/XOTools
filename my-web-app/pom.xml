<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.example</groupId>
    <artifactId>my-web-app</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging> <!-- 打包类型为war，用于Web应用 -->

    <name>My WebApp for ClassLoader Demo</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <!-- 如果web.xml不存在，是否构建失败。这里设置为false以支持现代Servlet规范（Servlet 3.0+）中可选的web.xml -->
        <failOnMissingWebXml>false</failOnMissingWebXml>
    </properties>

    <dependencies>
        <!-- Servlet API 依赖：scope为provided，表示该依赖由Servlet容器（如Tomcat）提供，无需打包到WAR中 -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>4.0.1</version>
            <scope>provided</scope>
        </dependency>

        <!-- external-lib 依赖：
             这个库包含了用于演示类加载器差异的ExternalClass。
             由于它会被手动放置到Tomcat的lib目录下（由Tomcat的父级类加载器加载），
             所以这里设置为provided，表示编译时需要，运行时由容器提供。
        -->
        <dependency>
            <groupId>com.example</groupId>
            <artifactId>external-lib</artifactId>
            <version>1.0-SNAPSHOT</version>
            <scope>provided</scope>
        </dependency>

    </dependencies>

    <build>
        <finalName>my-web-app</finalName> <!-- 打包后的WAR文件名称 -->
        <plugins>
            <!-- Maven 编译插件配置 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>
            <!-- Maven WAR 打包插件配置 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.3.2</version>
                <configuration>
                    <failOnMissingWebXml>${failOnMissingWebXml}</failOnMissingWebXml>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>